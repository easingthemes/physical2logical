name: Release on TestPyPI

on:
  push:
    branches:
      - main

# ENV and Config
env:
  GIT_AUTHOR_NAME: github-actions
  GIT_AUTHOR_EMAIL: github-actions@github.com
  GIT_COMMITTER_NAME: github-actions
  GIT_COMMITTER_EMAIL: github-actions@github.com
  CI: true
  CONFIG_PYTHON_VERSION: '["3.x"]'
  CONFIG_OS: '["ubuntu-latest"]'
# Main Job
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      PYTHON_VERSION: ${{ steps.set-config.outputs.CONFIG_PYTHON_VERSION }}
      OS: ${{ steps.set-config.outputs.CONFIG_OS }}
    steps:
      - id: set-config
        run: |
          echo "CONFIG_PYTHON_VERSION=${{ toJSON(env.CONFIG_PYTHON_VERSION) }}" >> $GITHUB_OUTPUT
          echo "CONFIG_OS=${{ toJSON(env.CONFIG_OS) }}" >> $GITHUB_OUTPUT

  deploy:
    needs: [config]
    name: Build and publish Python üêç distributions üì¶ to TestPyPI
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        OS: ${{ fromJSON(needs.config.outputs.OS) }}
        PYTHON_VERSION: ${{ fromJSON(needs.config.outputs.PYTHON_VERSION) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install pypa/build
        run: |
          python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
